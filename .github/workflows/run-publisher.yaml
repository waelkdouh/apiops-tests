name: Run publisher

on:
  workflow_dispatch:
    inputs:
      ONLY_PUBLISH_LAST_COMMIT:
        description: "Only publish artifacts modified in last commit"
        type: boolean
        required: true
        default: true

permissions:
  contents: write
  pull-requests: write

env:
  APIOPS_RELEASE: v4.1.3

jobs:
  run_publisher:
    name: Run publisher
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set shared variables
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"
          
          if ("${{ github.event.inputs.ONLY_PUBLISH_LAST_COMMIT }}" -eq "true")
          {
            Write-Information "Setting commit ID..."
            "COMMIT_ID=${{ github.sha }}" >> $env:GITHUB_ENV          
          }

          $configurationYamlPath = Join-Path ${{ github.workspace }} "configuration.${{ matrix.environment }}.yaml"
          if (Test-Path $configurationYamlPath)
          { 
            Write-Information "Setting configuration YAML path..."
            "CONFIGURATION_YAML_PATH=$configurationYamlPath" >> $env:GITHUB_ENV
          }

          Write-Information "Setting API management service name..."
          $serviceName = ""
          switch ("${{ matrix.environment }}")
          {
            "dev" { $serviceName = "${{ vars.DEV_API_MANAGEMENT_SERVICE_NAME }}" }
            "prod" { $serviceName = "${{ vars.PROD_API_MANAGEMENT_SERVICE_NAME }}" }
          }
          if ([string]::IsNullOrWhiteSpace($serviceName))
          {
            throw "Service name cannot be empty."
          }
          "API_MANAGEMENT_SERVICE_NAME=$serviceName" >> $env:GITHUB_ENV

          Write-Information "Setting artifacts folder..."
          $artifactsFolderPath = Join-Path ${{ github.workspace }} "artifacts"
          "API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH=$artifactsFolderPath" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Run publisher
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading publisher..."
          $publisherFileName = "${{ runner.os }}" -like "*win*" ? "publisher.win-x64.exe" : "publisher.linux-x64.exe"
          $downloadUrl = "https://github.com/Azure/apiops/releases/download/${{ env.APIOPS_RELEASE }}/$publisherFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" "publisher.exe"
          Invoke-WebRequest -Uri "$downloadUrl" -OutFile "$destinationFilePath"

          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
          }

          Write-Information "Running publisher..."
          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}
        shell: pwsh
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}