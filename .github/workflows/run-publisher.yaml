name: Run publisher

on:
  workflow_dispatch:
    inputs:
      ONLY_PUBLISH_LAST_COMMIT:
        description: "Only publish artifacts modified in last commit"
        type: boolean
        required: true
        default: true

permissions:
  contents: write
  pull-requests: write

env:
  APIOPS_RELEASE: v4.1.3

jobs:
  run_publisher:
    name: Run publisher
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set shared variables
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"
          
          if (${{ github.event.inputs.ONLY_PUBLISH_LAST_COMMIT }} -eq "true")
          {
            Write-Information "Setting commit ID..."
            "COMMIT_ID=${{ github.sha }}" >> $env:GITHUB_ENV          
          }
        shell: pwsh

      # - name: Set variables
      #   run: |
      #     Set-StrictMode -Version Latest
      #     $ErrorActionPreference = "Stop"
      #     $VerbosePreference = "Continue"
      #     $InformationPreference = "Continue"

      #     Write-Information "Input is ${{ github.event.inputs.ONLY_PUBLISH_LAST_COMMIT }}"
      #     if (${{ github.event.inputs.ONLY_PUBLISH_LAST_COMMIT }})
      #     {
      #       "COMMIT_ID=${{ github.sha }}" >> $env:GITHUB_ENV
      #     }

      #     # $configurationYamlPath = Join-Path ${{ github.workspace }} "configuration.${{ matrix.environment }}.yaml"
      #     # if (Test-Path $configurationYamlPath)
      #     # { 
      #     #   "CONFIGURATION_YAML_PATH=$configurationYamlPath" >> $env:GITHUB_ENV
      #     # }

      #     # $serviceNames = ${{ fromJson(vars)}}
      #     # Write-Information $serviceNames
      #   shell: pwsh

      # - name: Run extractor
      #   run: |
      #     Set-StrictMode -Version Latest
      #     $ErrorActionPreference = "Stop"
      #     $VerbosePreference = "Continue"
      #     $InformationPreference = "Continue"

      #     Write-Information "Emptying artifacts folder..."
      #     $artifactsFolderPath = "${{ env.ARTIFACTS_FOLDER_PATH }}"
      #     if (Test-Path $artifactsFolderPath)
      #     {
      #       $artifactsFolderChildren = Join-Path "$env:API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH" "*"
      #       Remove-Item $artifactsFolderChildren -Recurse -Force
      #     }

      #     Write-Information "Downloading extractor..."
      #     $extractorFileName = "${{ runner.os }}" -like "*win*" ? "extractor.win-x64.exe" : "extractor.linux-x64.exe"
      #     $downloadUrl = "https://github.com/Azure/apiops/releases/download/${{ env.APIOPS_RELEASE }}/$extractorFileName"
      #     $destinationFilePath = Join-Path "${{ runner.temp }}" "extractor.exe"
      #     Invoke-WebRequest -Uri "$downloadUrl" -OutFile "$destinationFilePath"

      #     if ("${{ runner.os }}" -like "*linux*")
      #     {
      #       Write-Information "Setting file permissions..."
      #       & chmod +x "$destinationFilePath"
      #       if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
      #     }

      #     Write-Information "Running extractor..."
      #     & "$destinationFilePath"              
      #     if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}
      #   shell: pwsh
      #   env:
      #     AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #     AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      #     AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      #     API_MANAGEMENT_SERVICE_NAME: ${{ vars.DEV_API_MANAGEMENT_SERVICE_NAME }}
      #     API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: "${{ env.ARTIFACTS_FOLDER_PATH }}"

      # - name: Create artifacts pull request
      #   uses: peter-evans/create-pull-request@v3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     commit-message: "Extractor commit"
      #     title: "Autogenerated extractor PR by run ${{ github.run_id }} on workflow ${{ github.workflow }}"
      #     body: >
      #       This PR is auto-generated by Github actions workflow
      #     labels: extractor, automated pr 