<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
	</inbound>
	<backend>
		<set-graphql-resolver parent-type="Query" field="getAllTodoItems">
			<http-data-source>
				<http-request>
					<set-method>GET</set-method>
					<set-url>https://todolistappgraphql.azurewebsites.net/api/todo</set-url>
				</http-request>
			</http-data-source>
		</set-graphql-resolver>
		<set-graphql-resolver parent-type="Query" field="getTodoItem">
			<http-data-source>
				<http-request>
					<set-method>GET</set-method>
					<set-url>@{
                            var args = context.Request.Body.As<JObject>(true)["arguments"];
                            return "https://todolistappgraphql.azurewebsites.net/api/todo/"+ args["id"].ToString();
                        }</set-url>
				</http-request>
			</http-data-source>
		</set-graphql-resolver>
		<set-graphql-resolver parent-type="Mutation" field="createTodoItem">
			<http-data-source>
				<http-request>
					<set-method>POST</set-method>
					<set-url>https://todolistappgraphql.azurewebsites.net/api/todo/</set-url>
					<set-body>{
                            "id": 4,
                            "title": "Item 4",
                            "notes": "Notes for item 4"
                        }</set-body>
				</http-request>
			</http-data-source>
		</set-graphql-resolver>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>